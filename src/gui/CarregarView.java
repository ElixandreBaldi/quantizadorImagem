package gui;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import gui.imagemFrame;
import gui.imagemPanel;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import quantizacaoimagem.Imagem;
import quantizacaoimagem.QuantizacaoImagem;
import static quantizacaoimagem.QuantizacaoImagem.CAMINHONOVAIMAGEM;

/**
 *
 * @author FREE
 */
public class CarregarView extends javax.swing.JFrame {
    private boolean modoInvalido = false;
    private String decodedPath;
    private imagemPanel dPanelbuffer = null;
    private static JFileChooser fcBuffer = null;
    private File fileBuffer = null;
    /**
     * Creates new form CarregarView
     */
    public CarregarView(){
        initComponents();
        String path = CarregarView.class.getProtectionDomain().getCodeSource().getLocation().getPath();
        centralizarJanela(this);
        drawPanel.setLayout(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btCarregar = new javax.swing.JButton();
        btQuantizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taAvisos = new javax.swing.JTextArea();
        btSalvar24 = new javax.swing.JButton();
        btSubtrair = new javax.swing.JButton();
        lbMsg = new javax.swing.JLabel();
        btSalvar16 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        drawPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 5), "CarregarCena"));

        btCarregar.setText("Carregar");
        btCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCarregarActionPerformed(evt);
            }
        });

        btQuantizar.setText("Quantizar");
        btQuantizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btQuantizarActionPerformed(evt);
            }
        });

        taAvisos.setColumns(20);
        taAvisos.setRows(5);
        jScrollPane1.setViewportView(taAvisos);

        btSalvar24.setText("Salvar24");
        btSalvar24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar24ActionPerformed(evt);
            }
        });

        btSubtrair.setText("Subtrair");
        btSubtrair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSubtrairActionPerformed(evt);
            }
        });

        lbMsg.setText("Mensagem : ");

        btSalvar16.setText("Salvar16");
        btSalvar16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvar16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbMsg)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btCarregar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btQuantizar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btSalvar24, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btSalvar16, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(btSubtrair, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbMsg)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(btCarregar)
                    .addComponent(btQuantizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSalvar24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSubtrair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btSalvar16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        drawPanel.setBackground(new java.awt.Color(153, 153, 153));
        drawPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 5));
        drawPanel.setPreferredSize(new java.awt.Dimension(2000, 2000));

        javax.swing.GroupLayout drawPanelLayout = new javax.swing.GroupLayout(drawPanel);
        drawPanel.setLayout(drawPanelLayout);
        drawPanelLayout.setHorizontalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        drawPanelLayout.setVerticalGroup(
            drawPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(drawPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 542, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCarregarActionPerformed
        // TODO add your handling code here:
        lbMsg.setText("Abrindo imagem.....");
        this.setVisible(true);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("BMP","bmp","arquivo bmp");
        if (fcBuffer==null)
        {
            fcBuffer = new JFileChooser();
        }
        fcBuffer.setFileFilter(filter);
        
        int returnVal = fcBuffer.showOpenDialog(this);
        
        try{
            if (returnVal == JFileChooser.APPROVE_OPTION)
            {
                long startTime = System.nanoTime();
                File file = fcBuffer.getSelectedFile();
                fileBuffer = file;
                if (dPanelbuffer==null){
                    imagemPanel imgPanel = new imagemPanel(file);
                    imgPanel.setVisible(true);
                    drawPanel.add(imgPanel);
                    drawPanel.repaint();
                    dPanelbuffer = imgPanel;
                    dPanelbuffer.repaint();
                    drawPanel.revalidate();
                    this.pack();
                }else{
                    dPanelbuffer.changeImage(file);
                    drawPanel.repaint();
                    dPanelbuffer.repaint();
                    this.pack();
                }
                long endTime = System.nanoTime();
                long elapsed = endTime-startTime;
                double segundo = (elapsed+0.0)/1000000000.0;
                System.out.println("Elapsed="+elapsed);
                lbMsg.setText("Imagem aberta com sucesso!Tempo : "+segundo);
            }
            else
            {
                lbMsg.setText("Cancelado!");
                //this.setVisible(true);
            }
        }
        catch( Exception e)
        {
            //this.setVisible(true);
            lbMsg.setText("Erro!");
            taAvisos.setText("Erro e = " + e.getMessage());
        }
        System.out.println("end");
    }//GEN-LAST:event_btCarregarActionPerformed

    private void btQuantizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btQuantizarActionPerformed
        // TODO add your handling code here:
        lbMsg.setText("Quantizando imagem....");
        if (!(dPanelbuffer==null)){
            long startTime = System.nanoTime();
            
            drawPanel.updateUI();
            dPanelbuffer.quantizar();
            drawPanel.repaint();
            dPanelbuffer.repaint();
            
            long endTime = System.nanoTime();
            long elapsed = endTime-startTime;
            double segundo = (elapsed+0.0)/1000000000.0;
            System.out.println("Elapsed="+elapsed);
            lbMsg.setText("Imagem quantizada com sucesso!Tempo : "+segundo);
        }else{
            System.out.println("no image selected");
            lbMsg.setText("Nenhuma imagem selecionada!");
        }
    }//GEN-LAST:event_btQuantizarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosing

    private void btSalvar24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar24ActionPerformed
        // TODO add your handling code here:
        lbMsg.setText("Salvando em 24bits...");
        if (!(fileBuffer==null)){
            long startTime = System.nanoTime();
            //File outFile16 = new File(fileBuffer.getParent()+"\\test16.bmp");
            File outFile24 = new File(fileBuffer.getParent()+"\\test24.bmp");
            //FileOutputStream escreverSaida16 = null;
            FileOutputStream escreverSaida24 = null;
            try {
                //escreverSaida16 = new FileOutputStream(outFile16);
                escreverSaida24 = new FileOutputStream(outFile24);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CarregarView.class.getName()).log(Level.SEVERE, null, ex);
            }

            Imagem img = dPanelbuffer.getImagem();

            try {        
                //img.escreverNovaImagem16Bits(escreverSaida16);
                img.escreverNovaImagem24Bits(escreverSaida24);
                long endTime = System.nanoTime();
                long elapsed = endTime-startTime;
                double segundo = (elapsed+0.0)/1000000000.0;
                System.out.println("Elapsed="+elapsed);
                lbMsg.setText("Imagem salva(24bits) com sucesso!Tempo : "+segundo);
            } catch (IOException ex) {
                Logger.getLogger(CarregarView.class.getName()).log(Level.SEVERE, null, ex);
                lbMsg.setText("Erro1");
            }
            try {
                //escreverSaida16.close();
                escreverSaida24.close();
            } catch (IOException ex) {
                Logger.getLogger(CarregarView.class.getName()).log(Level.SEVERE, null, ex);
                lbMsg.setText("Erro2");
            }
        }else{
            lbMsg.setText("Nenhuma imagem selecionada!");
        }
    }//GEN-LAST:event_btSalvar24ActionPerformed

    private void btSubtrairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSubtrairActionPerformed
        // TODO add your handling code here:
        lbMsg.setText("Subtraindo...");
        if (!(dPanelbuffer==null)){
            FileNameExtensionFilter filter = new FileNameExtensionFilter("BMP","bmp","arquivo bmp");
            if (fcBuffer==null)
            {
                fcBuffer = new JFileChooser();
            }
            fcBuffer.setFileFilter(filter);

            int returnVal = fcBuffer.showOpenDialog(this);

            try{
                if (returnVal == JFileChooser.APPROVE_OPTION)
                {
                    long startTime = System.nanoTime();
                    File file = fcBuffer.getSelectedFile();
                    fileBuffer = file;
                    imagemPanel imgPanel = new imagemPanel(file);
                    
                    Imagem img1 = dPanelbuffer.getImagem();
                    int imagemWidth1 = QuantizacaoImagem.binarioParaDecimal(img1.getBiWidth());
                    int imagemHeight1 = QuantizacaoImagem.binarioParaDecimal(img1.getBiHeight());
                    
                    Imagem img2 = imgPanel.getImagem();
                    int imagemWidth2 = QuantizacaoImagem.binarioParaDecimal(img2.getBiWidth());
                    int imagemHeight2 = QuantizacaoImagem.binarioParaDecimal(img2.getBiHeight());
                    
                    if (imagemWidth1==imagemWidth2&&imagemHeight1==imagemHeight2){
                        System.out.println("subTraindo!");
                        drawPanel.updateUI();
                        dPanelbuffer.subtrair(img2);
                        drawPanel.repaint();
                        dPanelbuffer.repaint();
                        long endTime = System.nanoTime();
                        long elapsed = endTime-startTime;
                        double segundo = (elapsed+0.0)/1000000000.0;
                        System.out.println("Elapsed="+elapsed);
                        lbMsg.setText("Subtracao com sucesso!Tempo : "+segundo);
                    }else{
                        lbMsg.setText("Erro, tamanhos incompativeis");
                    }
                }
                else
                {
                    lbMsg.setText("Cancelado!");
                    //this.setVisible(true);
                }
            }
            catch( Exception e)
            {
                //this.setVisible(true);
                lbMsg.setText("Erro");
                taAvisos.setText("Erro e = " + e.getMessage());
            }
        }
     
        System.out.println("end");
    }//GEN-LAST:event_btSubtrairActionPerformed

    private void btSalvar16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvar16ActionPerformed
        // TODO add your handling code here:
        lbMsg.setText("Salvando em 16 bits....");
        if (!(fileBuffer==null)){
            long startTime = System.nanoTime();
            File outFile16 = new File(fileBuffer.getParent()+"\\test16.bmp");
            //File outFile24 = new File(fileBuffer.getParent()+"\\test24.bmp");
            FileOutputStream escreverSaida16 = null;
            //FileOutputStream escreverSaida24 = null;
            try {
                escreverSaida16 = new FileOutputStream(outFile16);
                //escreverSaida24 = new FileOutputStream(outFile24);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CarregarView.class.getName()).log(Level.SEVERE, null, ex);
            }

            Imagem img = dPanelbuffer.getImagem();

            try {        
                img.escreverNovaImagem16Bits(escreverSaida16);
                //img.escreverNovaImagem24Bits(escreverSaida24);
                long endTime = System.nanoTime();
                long elapsed = endTime-startTime;
                double segundo = (elapsed+0.0)/1000000000.0;
                System.out.println("Elapsed="+elapsed);
                lbMsg.setText("Imagem salva(16bits) com sucesso!Tempo : "+segundo);
            } catch (IOException ex) {
                Logger.getLogger(CarregarView.class.getName()).log(Level.SEVERE, null, ex);
                lbMsg.setText("Erro1");
            }
            try {
                escreverSaida16.close();
                //escreverSaida24.close();
            } catch (IOException ex) {
                Logger.getLogger(CarregarView.class.getName()).log(Level.SEVERE, null, ex);
                lbMsg.setText("Erro2");
            }
        }
    }//GEN-LAST:event_btSalvar16ActionPerformed
    public static void centralizarJanela(JFrame janela)
    {
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        janela.setLocation(dim.width/2-janela.getSize().width/2, dim.height/2-janela.getSize().height/2);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarregarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarregarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarregarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarregarView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarregarView().setVisible(true);
            }
        });
    }
    
    private void aoFechar()
    {
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCarregar;
    private javax.swing.JButton btQuantizar;
    private javax.swing.JButton btSalvar16;
    private javax.swing.JButton btSalvar24;
    private javax.swing.JButton btSubtrair;
    private javax.swing.JPanel drawPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbMsg;
    private javax.swing.JTextArea taAvisos;
    // End of variables declaration//GEN-END:variables

}

