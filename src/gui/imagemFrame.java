/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.List;
import javax.swing.JFrame;
import quantizacaoimagem.Cor;
import quantizacaoimagem.Imagem;
import quantizacaoimagem.QuantizacaoImagem;
import static quantizacaoimagem.QuantizacaoImagem.binarioParaDecimal;

/**
 *
 * @author FREE
 */
public class imagemFrame extends javax.swing.JFrame {
    private BufferedImage buffer = null;
    
    /**
     * Creates new form imagemFrame
     */
    public imagemFrame(File file) {
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        try{
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
            this.setPreferredSize(dim);
            this.pack();
            QuantizacaoImagem qI = new QuantizacaoImagem(file);
            Imagem img = qI.getImagem();
            img.quantizar();
            List< Cor > pixels = img.getPixel();
            for (int i=0;i<pixels.size();i++){
                //System.out.println("Cor em " + i + "=" + pixels.get(i).toString());
            }
            int imagemWidth = QuantizacaoImagem.binarioParaDecimal(img.getBiWidth());
            int imagemHeight = QuantizacaoImagem.binarioParaDecimal(img.getBiHeight());
            int quantiaPixels = imagemWidth*imagemHeight;
            
            int frameWidth = this.getSize().width;
            int frameHeight = this.getSize().height;
            BufferedImage quadro = new BufferedImage(frameWidth,frameHeight,BufferedImage.TYPE_INT_ARGB);

            for (int i=0;i<frameHeight;i++)
            {
                int i2 = imagemHeight-i-1;
                for (int j=0;j<frameWidth;j++){
                    int corPreencher = Color.OPAQUE;
                    if (!(pixels==null)){
                        if (i<imagemHeight && j<imagemWidth){
                            int pos = i2*imagemWidth + j;
                            //System.out.println("i="+i+",j="+j+",pos = " + pos);
                            Cor corRelativa = pixels.get(pos);
                            Color corNoPixel = corRelativa.getValorCor();
                            //System.out.println("Valor em " + pos + "="+corNoPixel.toString());
                            corPreencher = corNoPixel.getRGB();
                            //System.out.println("Escrevendo em " + j + ","+i+"=" + (new Color(corPreencher)).toString());
                        }
                    }
                    quadro.setRGB(j, i, corPreencher);
                }
            }
            buffer = quadro;
            //this.setPreferredSize(new Dimension(imagemWidth,imagemHeight));
            //this.pack();
            System.out.println("FIM CONSTRUTOR");
        }catch(Exception e){
            System.err.println("ERRO EM IMAGEMFRAME");
            e.printStackTrace();
        }
    }
    
    @Override
    public void paint(Graphics g)
    {
        if (!(buffer==null)){
            //System.out.println("DRAWING");
            g.drawImage(buffer, 20, 50, this);
        }
    }
    
    
    
    public imagemFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(imagemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(imagemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(imagemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(imagemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new imagemFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
